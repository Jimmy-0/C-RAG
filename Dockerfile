# 使用官方的 Python 3.10 slim 作為基礎映像
FROM python:3.10-slim

# 設置環境變量，防止 Python 生成 .pyc 文件，並啟用輸出緩衝
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# 設置工作目錄
WORKDIR /app

# RUN echo "# Generated by Docker Engine. \
#     # This file can be edited; Docker Engine will not make further changes once it
#     # has been modified.
#     nameserver 10.20.50.218 \
#     nameserver 10.21.60.218 \
#     # Based on host file: '/etc/resolv.conf' (legacy)
#     # Overrides: []
#     " > resolv.conf


# Now proceed with the usual update and install
RUN apt-get update && apt-get install -y --no-install-recommends \
    procps \
    sqlite3 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 複製並安裝 Python 依賴
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

RUN pip install --no-cache-dir azure-core gunicorn gevent

# 下載 Spacy 模型
RUN python -m spacy download en_core_web_sm

# 複製應用程序代碼
COPY . .

# 暴露應用程序運行的端口
EXPOSE 5491

# 設置環境變量
ENV FLASK_APP=main.py
ENV FLASK_RUN_HOST=0.0.0.0
ENV FLASK_RUN_PORT=5491

# 使用 Gunicorn 作為生產 WSGI 服務器
CMD ["gunicorn", "--config", "gunicorn.conf.py", "main:app"]
